// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Weatherify.Services;

#nullable disable

namespace Weatherify.Migrations
{
    [DbContext(typeof(WeatherifyDbContext))]
    partial class WeatherifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Weatherify.Models.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitude")
                        .HasPrecision(17, 10)
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasPrecision(17, 10)
                        .HasColumnType("REAL");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations", (string)null);
                });

            modelBuilder.Entity("Weatherify.Models.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double?>("Elevation")
                        .HasPrecision(18, 10)
                        .HasColumnType("REAL");

                    b.Property<float?>("GenerationTimeMs")
                        .HasPrecision(28, 7)
                        .HasColumnType("REAL");

                    b.Property<double?>("Latitude")
                        .HasPrecision(17, 10)
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasPrecision(17, 10)
                        .HasColumnType("REAL");

                    b.Property<string>("TimezoneAbbr")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<double?>("UtcOffsetSeconds")
                        .HasPrecision(28, 7)
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Weathers", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
