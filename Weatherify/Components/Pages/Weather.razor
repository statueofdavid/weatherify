@page "/weather"

@using Weatherify.Services
@using Weatherify.Models

@inject IJSRuntime JSRuntime
@inject WeatherService WeatherService

@rendermode InteractiveServer

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>
<Button @onclick="GetWeatherByCurrentLocation">
    Get Weather by Current Location
</Button>

@if (isLoading) {
  <p>Getting Weather By Location...</p>
}

@if(location.Latitude != null && location.Longitude != null) {
  <p>Latitude: @location.Latitude</p>
  <p>Longitude: @location.Longitude</p>
}

@code 
{

  private bool isLoading = false;

  private Location location = new Location();

  private class Position {
    public Coordinates? coords { get; set; }
  }

  private class Coordinates {
    public double? latitude { get; set; }
    public double? longitude { get; set; }
  }

  private async Task GetWeatherByCurrentLocation() {
    isLoading = true;
    var latlong = await JSRuntime.InvokeAsync<Position>("getLocation", Array.Empty<object>());

    location = new Location {
      Latitude = latlong?.coords?.latitude,
      Longitude = latlong?.coords?.longitude,
      City = "",
      State = ""
    };
    
    isLoading = false;

    var weatherDetail = await WeatherService
      .fetchWeatherByLatLon(location.Latitude, location.Longitude);

  }
}
